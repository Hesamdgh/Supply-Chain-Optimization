import refrom django.core.management.base import BaseCommandfrom routes.models import ShipmentRouteclass Command(BaseCommand):    help = 'Clean and preprocess data in ShipmentRoute model'    def handle(self, *args, **kwargs):        # Fetch all records        routes = ShipmentRoute.objects.all()        # Remove rows with "Invoiced Separately" or "Weight Captured Separately"        routes.filter(            weight_kg__in=["Weight Captured Separately"]        ).delete()                routes.filter(        freight_cost_usd__in=["Invoiced Separately"]        ).delete()                for route in routes:            # Clean weight_kg            if isinstance(route.weight_kg, str) and 'ID#:' in route.weight_kg:                route.weight_kg = self.replace_with_id_value(route.weight_kg, 'weight_kg', routes)            # Clean freight_cost_usd            if isinstance(route.freight_cost_usd, str) and 'ID#:' in route.freight_cost_usd:                route.freight_cost_usd = self.replace_with_id_value(route.freight_cost_usd, 'freight_cost_usd', routes)            # If either weight_kg or freight_cost_usd is None, delete the row            if route.weight_kg is None or route.freight_cost_usd is None:                route.delete()            else:                route.save()    def extract_id_number(self, text):        """Extracts the ID number from the text."""        match = re.search(r'ID#:(\d+)', text)        if match:            return match.group(1)        return None    def replace_with_id_value(self, text, column_name, routes):        """        Extracts the ID number and replaces the text with the value from the corresponding row.        """        id_number = self.extract_id_number(text)        if id_number:            # Find the row with the matching code            matching_route = routes.filter(code=id_number).first()            if matching_route:                return getattr(matching_route, column_name)            #If the matching route is not found then it returns None        return None